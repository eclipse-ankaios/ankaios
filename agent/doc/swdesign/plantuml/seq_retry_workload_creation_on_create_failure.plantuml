@startuml seq_retry_workload_creation_on_create_failure
!include ../../../../resources/doc/plantuml/clean.skin

box "Ankaios Agent"
    participant "RuntimeFacade" as runtime_facade
    participant "WorkloadCommandChannel" as workload_command
    participant "WorkloadControlLoop" as workload_control_loop
    participant "RetryManager" as retry_manager
    participant "Specific Runtime Connector\n e.g., PodmanRuntime" as runtime
end box

activate runtime_facade
runtime_facade ->> runtime_facade ++: spawn create workload
runtime_facade -> workload_command ++: send create
workload_command -->> runtime_facade--
runtime_facade -> workload_control_loop --++: run
deactivate runtime_facade
workload_control_loop -> workload_command++: wait for command
workload_command -->> workload_control_loop --++: receive create
workload_control_loop -> runtime ++: create
runtime -->> workload_control_loop--
loop while create workload fails
    workload_control_loop ->> retry_manager--++
    ...wait for backoff time...
    retry_manager ->> workload_command--: send retry command

    workload_control_loop -> workload_command++: wait for command
    workload_control_loop <<-- workload_command--++: retry command

    workload_control_loop -> runtime ++: create workload
       runtime -->> workload_control_loop--
end
workload_control_loop -> workload_command ++: wait for command
...
@enduml
